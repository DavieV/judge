***** BRUSH UP ON REVERSING LINKED LIST THEY LOVE THAT SHIT *****

How does a hash table work?
===========================

It takes an object from a given universe of discourse and comes up with an integral value for it between 1 and n
(where n is the size of the hash table).  The main goal is to produce these values in such a way that 2 identical objects will get the same hash and the distribution of codes is uniform.

What are differences between C++ and Java?
==========================================

- Java relies on a virtual machine (JVM) whereas C++ does not
- C++ was designed for systems applications whereas Java is more high level general purpose
- C++ is write once compile anywhere, Java is write once, run anywhere (as a result of the JVM)
- C++ encourages using mixed paradigms (procedural, function, generic), Java favors object oriented style
- C++ has template metaprogramming (compile time code executution) Java does not
- C++ has optional bound checking ([] vs .at()), Java forces bound checking
- C++ supports pass by value or pass by reference, Java is always pass by value
- C++ does not support automatic memory managment (garbage collection) for values stored on the heap (free store), Java has a garbage collector
- In Java classes are always allocated on the heap (have to use new), C++ allows them to be stored on the stack
- C++ standard library was designed to be minimalist but provide tools to create more, Java standard library is massive
- C++ allows for operator overloading
- C++ allows for multiple inheritance
- C++ supports lambdas functors and function pointers where Java does not
- C++ uses the const keyword and can specificy member functions as const, Java uses final and has no member const-ness
- C++ has compile time type inferring (auto and declytype), Java must cast to Object

How would you write code to perform an action before an object is deallocated in Java?
======================================================================================

- Over-ride the finalize method (Generally not a great idea)
- In C++ you would just define a custom destructor ~T and do it there

What is the difference between memmove() and memcpy() ?
=======================================================

memcpy assumes that the source and destination memory do not overlap at all.  So it always copies from low to high.
memmove does not make this assumption, so it first checks where/if the memory overlaps, and then makes the choice whether to copy from low to high (forwards) or from high to low(backwards).  It is better to use memmove if you do not know for sure if the memory overlaps, memcpy is faster otherwise.

What is the difference between an interface and abstract class?
===============================================================

An interface is a contract: the guy writing the interface says, "hey, I accept things looking that way", and the guy using the interface says "OK, the class I write looks that way". An interface is an empty shell, there are only the signatures (name / params / return type) of the methods. The methods do not contain anything. The interface can't do anything. It's just a pattern.

Abstract classes look a lot like interfaces, but they have something more : you can define a behavior for them. It's more about a guy saying, "these classes should look like that, and they have that in common, so fill in the blanks!".

